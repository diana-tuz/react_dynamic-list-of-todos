{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","Loader","className","TodoModal","todo","openModal","user","id","title","completed","useState","isLoading","setIsLoading","useEffect","timer","clearTimeout","type","onClick","href","email","name","TodoItem","modalIsOpen","setModalIsOpen","userId","setUser","getUser","userData","classNames","TodoList","todos","map","TodoFilter","setTodos","setTitle","todosData","filteredData","filter","toLowerCase","includes","getFilteredTodos","value","a","filteredTodos","onChange","e","target","placeholder","style","pointerEvents","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16abb0ae.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo\n  openModal: (a: boolean) => void\n  user: User\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, openModal, user }) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n      {isLoading && <Loader />}\n\n      {\n        !isLoading && (\n\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => openModal(false)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n\n              </p>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoModal } from '../TodoModal';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const showModal = () => setModalIsOpen(!modalIsOpen);\n  const {\n    title,\n    id,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(userId)\n      .then(userData => {\n        setUser(userData);\n      });\n  }, [userId]);\n\n  return (\n    <>\n      <tr\n        data-cy=\"todo\"\n        className={classNames({ 'has-background-info-light': modalIsOpen })}\n        key={id}\n      >\n        <td className=\"is-vcentered\">{id}</td>\n        {completed\n          ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          )\n          : <td className=\"is-vcentered\" />}\n        <td className=\"is-vcentered is-expanded\">\n          <p className={classNames({\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          })}\n          >\n            {title}\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={showModal}\n          >\n            <span className=\"icon\">\n              <i\n                className={classNames('far',\n                  {\n                    'fa-eye-slash': modalIsOpen,\n                    'fa-eye': !modalIsOpen,\n                  })}\n              />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      {modalIsOpen && user\n        && (\n          <TodoModal\n            key={userId}\n            todo={todo}\n            openModal={setModalIsOpen}\n            user={user}\n          />\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo: Todo) => (\n          <TodoItem todo={todo} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setTodos: (a: Todo[]) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setTodos }) => {\n  const [title, setTitle] = useState('');\n\n  useEffect(() => {\n    const filteredByTitle = (todos: Todo[]) => {\n      return todos.filter(\n        todo => todo.title.toLowerCase().includes(title.toLowerCase()),\n      );\n    };\n\n    getTodos().then(todosData => {\n      if (title) {\n        const filteredData = filteredByTitle(todosData);\n\n        setTodos(filteredData);\n      } else {\n        setTodos(todosData);\n      }\n    });\n  }, [title, setTodos]);\n\n  const handleFind\n    = (e: React.ChangeEvent<HTMLInputElement>) => setTitle(e.target.value);\n\n  const getFilteredTodos = async (value: string) => {\n    let filteredTodos: Todo[] = [];\n\n    switch (value) {\n      case 'all':\n        filteredTodos = await getTodos();\n        break;\n      case 'active':\n        filteredTodos = (await getTodos()).filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        filteredTodos = (await getTodos()).filter(todo => todo.completed);\n        break;\n      default:\n        break;\n    }\n\n    setTodos(filteredTodos);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => getFilteredTodos(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleFind}\n          value={title}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {title\n            && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setTitle('')}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setTodos={setTodos} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : <TodoList todos={todos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}