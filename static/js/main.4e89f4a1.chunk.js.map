{"version":3,"sources":["api.ts","types/enum.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterBy","getTodos","Loader","className","TodoModal","todo","toggleModal","user","isLoadingUser","id","title","completed","type","onClick","href","email","name","TodoItem","useState","modalIsOpen","setModalIsOpen","setIsLoadingUser","showModal","useCallback","prevModalIsOpen","userId","setUser","useEffect","getUser","userData","catch","classNames","TodoList","todos","map","TodoFilter","setTodos","setTitle","todosData","filteredData","filter","toLowerCase","includes","getFilteredTodos","value","a","filteredTodos","ALL","ACTIVE","COMPLETED","onChange","e","target","placeholder","style","pointerEvents","App","isLoading","setIsLoading","timer","clearTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e89f4a1.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterBy {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo\n  toggleModal: (a: boolean) => void\n  user: User\n  isLoadingUser: boolean\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  toggleModal,\n  user,\n  isLoadingUser,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n      {isLoadingUser && <Loader />}\n\n      {!isLoadingUser\n        && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => toggleModal(false)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport classNames from 'classnames';\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoModal } from '../TodoModal';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [isLoadingUser, setIsLoadingUser] = useState(true);\n\n  const showModal = useCallback(() => {\n    setModalIsOpen(prevModalIsOpen => !prevModalIsOpen);\n  }, []);\n\n  const {\n    title,\n    id,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    setIsLoadingUser(true);\n\n    getUser(userId)\n      .then(userData => {\n        setUser(userData);\n        setIsLoadingUser(false);\n      })\n      .catch(() => {\n        setIsLoadingUser(false);\n      });\n  }, [userId]);\n\n  return (\n    <>\n      <tr\n        data-cy=\"todo\"\n        className={classNames({ 'has-background-info-light': modalIsOpen })}\n        key={id}\n      >\n        <td className=\"is-vcentered\">{id}</td>\n        {completed\n          ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          )\n          : <td className=\"is-vcentered\" />}\n        <td className=\"is-vcentered is-expanded\">\n          <p className={classNames({\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          })}\n          >\n            {title}\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={showModal}\n          >\n            <span className=\"icon\">\n              <i\n                className={classNames('far',\n                  {\n                    'fa-eye-slash': modalIsOpen,\n                    'fa-eye': !modalIsOpen,\n                  })}\n              />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      {modalIsOpen && user\n        && (\n          <TodoModal\n            todo={todo}\n            toggleModal={setModalIsOpen}\n            user={user}\n            isLoadingUser={isLoadingUser}\n          />\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo: Todo) => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { FilterBy } from '../../types/enum';\n\ntype Props = {\n  setTodos: (a: Todo[]) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setTodos }) => {\n  const [title, setTitle] = useState('');\n\n  useEffect(() => {\n    const filteredByTitle = (todos: Todo[]) => {\n      return todos.filter(\n        todo => todo.title.toLowerCase().includes(title.toLowerCase()),\n      );\n    };\n\n    getTodos().then(todosData => {\n      if (title) {\n        const filteredData = filteredByTitle(todosData);\n\n        setTodos(filteredData);\n      } else {\n        setTodos(todosData);\n      }\n    });\n  }, [title, setTodos]);\n\n  const handleFind\n    = (e: React.ChangeEvent<HTMLInputElement>) => setTitle(e.target.value);\n\n  const getFilteredTodos = async (value: string) => {\n    let filteredTodos: Todo[] = [];\n\n    switch (value) {\n      case FilterBy.ALL:\n        filteredTodos = await getTodos();\n        break;\n      case FilterBy.ACTIVE:\n        filteredTodos = (await getTodos()).filter(todo => !todo.completed);\n        break;\n      case FilterBy.COMPLETED:\n        filteredTodos = (await getTodos()).filter(todo => todo.completed);\n        break;\n      default:\n        break;\n    }\n\n    setTodos(filteredTodos);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => getFilteredTodos(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleFind}\n          value={title}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {title\n            && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setTitle('')}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setTodos={setTodos} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : <TodoList todos={todos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}